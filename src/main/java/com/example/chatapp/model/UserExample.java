package com.example.chatapp.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Iterator;

public class UserExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table user
	 * @mbg.generated  Mon Mar 03 11:09:10 ICT 2025
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table user
	 * @mbg.generated  Mon Mar 03 11:09:10 ICT 2025
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table user
	 * @mbg.generated  Mon Mar 03 11:09:10 ICT 2025
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user
	 * @mbg.generated  Mon Mar 03 11:09:10 ICT 2025
	 */
	public UserExample() {
		oredCriteria = new ArrayList<>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user
	 * @mbg.generated  Mon Mar 03 11:09:10 ICT 2025
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user
	 * @mbg.generated  Mon Mar 03 11:09:10 ICT 2025
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user
	 * @mbg.generated  Mon Mar 03 11:09:10 ICT 2025
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user
	 * @mbg.generated  Mon Mar 03 11:09:10 ICT 2025
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user
	 * @mbg.generated  Mon Mar 03 11:09:10 ICT 2025
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user
	 * @mbg.generated  Mon Mar 03 11:09:10 ICT 2025
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user
	 * @mbg.generated  Mon Mar 03 11:09:10 ICT 2025
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user
	 * @mbg.generated  Mon Mar 03 11:09:10 ICT 2025
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user
	 * @mbg.generated  Mon Mar 03 11:09:10 ICT 2025
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table user
	 * @mbg.generated  Mon Mar 03 11:09:10 ICT 2025
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table user
	 * @mbg.generated  Mon Mar 03 11:09:10 ICT 2025
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andUseridIsNull() {
			addCriterion("userId is null");
			return (Criteria) this;
		}

		public Criteria andUseridIsNotNull() {
			addCriterion("userId is not null");
			return (Criteria) this;
		}

		public Criteria andUseridEqualTo(String value) {
			addCriterion("userId =", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridNotEqualTo(String value) {
			addCriterion("userId <>", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridGreaterThan(String value) {
			addCriterion("userId >", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridGreaterThanOrEqualTo(String value) {
			addCriterion("userId >=", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridLessThan(String value) {
			addCriterion("userId <", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridLessThanOrEqualTo(String value) {
			addCriterion("userId <=", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridLike(String value) {
			addCriterion("userId like", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridNotLike(String value) {
			addCriterion("userId not like", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridIn(List<String> values) {
			addCriterion("userId in", values, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridNotIn(List<String> values) {
			addCriterion("userId not in", values, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridBetween(String value1, String value2) {
			addCriterion("userId between", value1, value2, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridNotBetween(String value1, String value2) {
			addCriterion("userId not between", value1, value2, "userid");
			return (Criteria) this;
		}

		public Criteria andFullnameIsNull() {
			addCriterion("fullName is null");
			return (Criteria) this;
		}

		public Criteria andFullnameIsNotNull() {
			addCriterion("fullName is not null");
			return (Criteria) this;
		}

		public Criteria andFullnameEqualTo(String value) {
			addCriterion("fullName =", value, "fullname");
			return (Criteria) this;
		}

		public Criteria andFullnameNotEqualTo(String value) {
			addCriterion("fullName <>", value, "fullname");
			return (Criteria) this;
		}

		public Criteria andFullnameGreaterThan(String value) {
			addCriterion("fullName >", value, "fullname");
			return (Criteria) this;
		}

		public Criteria andFullnameGreaterThanOrEqualTo(String value) {
			addCriterion("fullName >=", value, "fullname");
			return (Criteria) this;
		}

		public Criteria andFullnameLessThan(String value) {
			addCriterion("fullName <", value, "fullname");
			return (Criteria) this;
		}

		public Criteria andFullnameLessThanOrEqualTo(String value) {
			addCriterion("fullName <=", value, "fullname");
			return (Criteria) this;
		}

		public Criteria andFullnameLike(String value) {
			addCriterion("fullName like", value, "fullname");
			return (Criteria) this;
		}

		public Criteria andFullnameNotLike(String value) {
			addCriterion("fullName not like", value, "fullname");
			return (Criteria) this;
		}

		public Criteria andFullnameIn(List<String> values) {
			addCriterion("fullName in", values, "fullname");
			return (Criteria) this;
		}

		public Criteria andFullnameNotIn(List<String> values) {
			addCriterion("fullName not in", values, "fullname");
			return (Criteria) this;
		}

		public Criteria andFullnameBetween(String value1, String value2) {
			addCriterion("fullName between", value1, value2, "fullname");
			return (Criteria) this;
		}

		public Criteria andFullnameNotBetween(String value1, String value2) {
			addCriterion("fullName not between", value1, value2, "fullname");
			return (Criteria) this;
		}

		public Criteria andEmailIsNull() {
			addCriterion("email is null");
			return (Criteria) this;
		}

		public Criteria andEmailIsNotNull() {
			addCriterion("email is not null");
			return (Criteria) this;
		}

		public Criteria andEmailEqualTo(String value) {
			addCriterion("email =", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotEqualTo(String value) {
			addCriterion("email <>", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailGreaterThan(String value) {
			addCriterion("email >", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailGreaterThanOrEqualTo(String value) {
			addCriterion("email >=", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailLessThan(String value) {
			addCriterion("email <", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailLessThanOrEqualTo(String value) {
			addCriterion("email <=", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailLike(String value) {
			addCriterion("email like", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotLike(String value) {
			addCriterion("email not like", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailIn(List<String> values) {
			addCriterion("email in", values, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotIn(List<String> values) {
			addCriterion("email not in", values, "email");
			return (Criteria) this;
		}

		public Criteria andEmailBetween(String value1, String value2) {
			addCriterion("email between", value1, value2, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotBetween(String value1, String value2) {
			addCriterion("email not between", value1, value2, "email");
			return (Criteria) this;
		}

		public Criteria andPhoneIsNull() {
			addCriterion("phone is null");
			return (Criteria) this;
		}

		public Criteria andPhoneIsNotNull() {
			addCriterion("phone is not null");
			return (Criteria) this;
		}

		public Criteria andPhoneEqualTo(String value) {
			addCriterion("phone =", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneNotEqualTo(String value) {
			addCriterion("phone <>", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneGreaterThan(String value) {
			addCriterion("phone >", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneGreaterThanOrEqualTo(String value) {
			addCriterion("phone >=", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneLessThan(String value) {
			addCriterion("phone <", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneLessThanOrEqualTo(String value) {
			addCriterion("phone <=", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneLike(String value) {
			addCriterion("phone like", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneNotLike(String value) {
			addCriterion("phone not like", value, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneIn(List<String> values) {
			addCriterion("phone in", values, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneNotIn(List<String> values) {
			addCriterion("phone not in", values, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneBetween(String value1, String value2) {
			addCriterion("phone between", value1, value2, "phone");
			return (Criteria) this;
		}

		public Criteria andPhoneNotBetween(String value1, String value2) {
			addCriterion("phone not between", value1, value2, "phone");
			return (Criteria) this;
		}

		public Criteria andDateofbirthIsNull() {
			addCriterion("dateOfBirth is null");
			return (Criteria) this;
		}

		public Criteria andDateofbirthIsNotNull() {
			addCriterion("dateOfBirth is not null");
			return (Criteria) this;
		}

		public Criteria andDateofbirthEqualTo(Date value) {
			addCriterionForJDBCDate("dateOfBirth =", value, "dateofbirth");
			return (Criteria) this;
		}

		public Criteria andDateofbirthNotEqualTo(Date value) {
			addCriterionForJDBCDate("dateOfBirth <>", value, "dateofbirth");
			return (Criteria) this;
		}

		public Criteria andDateofbirthGreaterThan(Date value) {
			addCriterionForJDBCDate("dateOfBirth >", value, "dateofbirth");
			return (Criteria) this;
		}

		public Criteria andDateofbirthGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("dateOfBirth >=", value, "dateofbirth");
			return (Criteria) this;
		}

		public Criteria andDateofbirthLessThan(Date value) {
			addCriterionForJDBCDate("dateOfBirth <", value, "dateofbirth");
			return (Criteria) this;
		}

		public Criteria andDateofbirthLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("dateOfBirth <=", value, "dateofbirth");
			return (Criteria) this;
		}

		public Criteria andDateofbirthIn(List<Date> values) {
			addCriterionForJDBCDate("dateOfBirth in", values, "dateofbirth");
			return (Criteria) this;
		}

		public Criteria andDateofbirthNotIn(List<Date> values) {
			addCriterionForJDBCDate("dateOfBirth not in", values, "dateofbirth");
			return (Criteria) this;
		}

		public Criteria andDateofbirthBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("dateOfBirth between", value1, value2, "dateofbirth");
			return (Criteria) this;
		}

		public Criteria andDateofbirthNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("dateOfBirth not between", value1, value2, "dateofbirth");
			return (Criteria) this;
		}

		public Criteria andPasswordIsNull() {
			addCriterion("password is null");
			return (Criteria) this;
		}

		public Criteria andPasswordIsNotNull() {
			addCriterion("password is not null");
			return (Criteria) this;
		}

		public Criteria andPasswordEqualTo(String value) {
			addCriterion("password =", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotEqualTo(String value) {
			addCriterion("password <>", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordGreaterThan(String value) {
			addCriterion("password >", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordGreaterThanOrEqualTo(String value) {
			addCriterion("password >=", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordLessThan(String value) {
			addCriterion("password <", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordLessThanOrEqualTo(String value) {
			addCriterion("password <=", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordLike(String value) {
			addCriterion("password like", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotLike(String value) {
			addCriterion("password not like", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordIn(List<String> values) {
			addCriterion("password in", values, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotIn(List<String> values) {
			addCriterion("password not in", values, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordBetween(String value1, String value2) {
			addCriterion("password between", value1, value2, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotBetween(String value1, String value2) {
			addCriterion("password not between", value1, value2, "password");
			return (Criteria) this;
		}

		public Criteria andIsactiveIsNull() {
			addCriterion("isActive is null");
			return (Criteria) this;
		}

		public Criteria andIsactiveIsNotNull() {
			addCriterion("isActive is not null");
			return (Criteria) this;
		}

		public Criteria andIsactiveEqualTo(Boolean value) {
			addCriterion("isActive =", value, "isactive");
			return (Criteria) this;
		}

		public Criteria andIsactiveNotEqualTo(Boolean value) {
			addCriterion("isActive <>", value, "isactive");
			return (Criteria) this;
		}

		public Criteria andIsactiveGreaterThan(Boolean value) {
			addCriterion("isActive >", value, "isactive");
			return (Criteria) this;
		}

		public Criteria andIsactiveGreaterThanOrEqualTo(Boolean value) {
			addCriterion("isActive >=", value, "isactive");
			return (Criteria) this;
		}

		public Criteria andIsactiveLessThan(Boolean value) {
			addCriterion("isActive <", value, "isactive");
			return (Criteria) this;
		}

		public Criteria andIsactiveLessThanOrEqualTo(Boolean value) {
			addCriterion("isActive <=", value, "isactive");
			return (Criteria) this;
		}

		public Criteria andIsactiveIn(List<Boolean> values) {
			addCriterion("isActive in", values, "isactive");
			return (Criteria) this;
		}

		public Criteria andIsactiveNotIn(List<Boolean> values) {
			addCriterion("isActive not in", values, "isactive");
			return (Criteria) this;
		}

		public Criteria andIsactiveBetween(Boolean value1, Boolean value2) {
			addCriterion("isActive between", value1, value2, "isactive");
			return (Criteria) this;
		}

		public Criteria andIsactiveNotBetween(Boolean value1, Boolean value2) {
			addCriterion("isActive not between", value1, value2, "isactive");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table user
	 * @mbg.generated  Mon Mar 03 11:09:10 ICT 2025
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user
     *
     * @mbg.generated do_not_delete_during_merge Mon Mar 03 11:09:10 ICT 2025
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}